// Code generated by go-swagger; DO NOT EDIT.

package bands

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetBandByIDHandlerFunc turns a function with the right signature into a get band by Id handler
type GetBandByIDHandlerFunc func(GetBandByIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetBandByIDHandlerFunc) Handle(params GetBandByIDParams) middleware.Responder {
	return fn(params)
}

// GetBandByIDHandler interface for that can handle valid get band by Id params
type GetBandByIDHandler interface {
	Handle(GetBandByIDParams) middleware.Responder
}

// NewGetBandByID creates a new http.Handler for the get band by Id operation
func NewGetBandByID(ctx *middleware.Context, handler GetBandByIDHandler) *GetBandByID {
	return &GetBandByID{Context: ctx, Handler: handler}
}

/* GetBandByID swagger:route GET /bands/{id} Bands getBandById

Find Band by id

Return band details by id

*/
type GetBandByID struct {
	Context *middleware.Context
	Handler GetBandByIDHandler
}

func (o *GetBandByID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetBandByIDParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
