// Code generated by go-swagger; DO NOT EDIT.

package bands

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetBandsHandlerFunc turns a function with the right signature into a get bands handler
type GetBandsHandlerFunc func(GetBandsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetBandsHandlerFunc) Handle(params GetBandsParams) middleware.Responder {
	return fn(params)
}

// GetBandsHandler interface for that can handle valid get bands params
type GetBandsHandler interface {
	Handle(GetBandsParams) middleware.Responder
}

// NewGetBands creates a new http.Handler for the get bands operation
func NewGetBands(ctx *middleware.Context, handler GetBandsHandler) *GetBands {
	return &GetBands{Context: ctx, Handler: handler}
}

/* GetBands swagger:route GET /bands Bands getBands

Find All Band

return all bands

*/
type GetBands struct {
	Context *middleware.Context
	Handler GetBandsHandler
}

func (o *GetBands) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetBandsParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
