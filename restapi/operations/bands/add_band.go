// Code generated by go-swagger; DO NOT EDIT.

package bands

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// AddBandHandlerFunc turns a function with the right signature into a add band handler
type AddBandHandlerFunc func(AddBandParams) middleware.Responder

// Handle executing the request and returning a response
func (fn AddBandHandlerFunc) Handle(params AddBandParams) middleware.Responder {
	return fn(params)
}

// AddBandHandler interface for that can handle valid add band params
type AddBandHandler interface {
	Handle(AddBandParams) middleware.Responder
}

// NewAddBand creates a new http.Handler for the add band operation
func NewAddBand(ctx *middleware.Context, handler AddBandHandler) *AddBand {
	return &AddBand{Context: ctx, Handler: handler}
}

/* AddBand swagger:route POST /newBand Bands addBand

Add a new Band to the Database

New Band is added to the Database

*/
type AddBand struct {
	Context *middleware.Context
	Handler AddBandHandler
}

func (o *AddBand) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewAddBandParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
